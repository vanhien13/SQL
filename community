select *
from 
	(select ISDN
	from
	(SELECT MID, Cast(SUM(REVENUE_SMS)as INT) AS SMS,Cast(SUM(REVENUE_VAS)as INT) AS VAS ,Cast(SUM(REVENUE_DATA)as INT) AS DATA,Cast(SUM(REVENUE_TOTAL)as INT) AS TOTAL 
	FROM   CDRVMS_ADMIN.VMS_DAILY_REVENUE_042016
	GROUP BY MID) b

	full outer join
	(select ISDN
	FROM CDRVMS.CDRVMS_ADMIN.VMS_VASPRO_DK d
	where d.GROUP_CODE in ('DATA', 'DATA_ADDON', 'DATASS','YOUTYBE','FACEBOOK','FC') AND  EXTRACT(YEAR FROM d.REG_DATETIME) = 2016 AND EXTRACT(MONTH FROM d.REG_DATETIME) = 4
	group by EXTRACT(YEAR FROM d.REG_DATETIME),  EXTRACT(MONTH FROM d.REG_DATETIME), ISDN) c
	on c.ISDN = b.MID) a
	inner join
	(SELECT OS_INFORMATION, BRAND,MODEL,TYPE,substr(ISDN,2,length(ISDN))  AS  MID
	FROM CDRVMS.CDRVMS_ADMIN.ADC_201604
	WHERE OS_INFORMATION != 'Feature Phone') u
	on u.MID = a.ISDN

SELECT EVENT_TYPE_NAME, COUNT(EVENT_TYPE_NAME), SUM(USED_DURATION), SUM(USED_DURATION) /COUNT(EVENT_TYPE_NAME) AS avr
  FROM CDRVMS.CDRVMS_ADMIN.VMS_CDRICC_201604
 WHERE substr(EVENT_TYPE_NAME,1,4) = 'GPRS'
 GROUP BY EVENT_TYPE_NAME
	
	
SELECT *
FROM (SELECT *
	FROM (SELECT OS_INFORMATION, BRAND,MODEL,TYPE,substr(ISDN,2,length(ISDN)) AS ISDN1
		FROM CDRVMS.CDRVMS_ADMIN.ADC_201604
		WHERE OS_INFORMATION = 'Feature Phone') Z
		INNER JOIN
		(SELECT ISDN , PROVINCE_CODE
		FROM CDRVMS.VUNGO.VMS_SUB_PSC
 		where MONTH_CHECK = 201604
		GROUP BY PROVINCE_CODE, ISDN) S
		ON Z.ISDN1 = S.ISDN) A
	left JOIN
	(select CALLING_ISDN
		FROM CDRVMS_ADMIN.VMS_CDRICC_201604
		WHERE substr(EVENT_TYPE_NAME,1,4) = 'GPRS'
		GROUP BY CALLING_ISDN) B
	ON  A.ISDN = B.CALLING_ISDN	
	where b.CALLING_ISDN is NULL
SELECT EXTRACT(MONTH FROM DATE_CHURN), EXTRACT(YEAR FROM DATE_CHURN)
  FROM CDRVMS.CDRVMS_ADMIN.VMS_CHURNER_2017
group by EXTRACT(MONTH FROM DATE_CHURN), EXTRACT(YEAR FROM DATE_CHURN)


select ISDN1,T11,T12,T1,T2,T3,T4
from 	(SELECT ISDN AS ISDN1, OS_INFORMATION AS T11
FROM CDRVMS_ADMIN.ADC_201511) A
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T12
FROM CDRVMS_ADMIN.ADC_201512) B
ON A.ISDN1 = B.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T1
FROM CDRVMS_ADMIN.ADC_201601) C
ON B.ISDN = C.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T2
FROM CDRVMS_ADMIN.ADC_201602) D
ON C.ISDN = D.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T3
FROM CDRVMS_ADMIN.ADC_201603) E
ON D.ISDN = E.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T4
FROM CDRVMS_ADMIN.ADC_201604) F
ON E.ISDN = F.ISDN
	

SELECT CS, COUNT(CS)
FROM(SELECT ISDN1,
CASE
WHEN T11 != T12 and T12 = T1 AND T1=T2 AND T2=T3 and T3=T4  THEN 1
WHEN T11 = T12 and T12 != T1 AND T1=T2 AND T2=T3 and T3=T4  THEN 1
WHEN T11 = T12 and T12 = T1 AND T1!=T2 AND T2=T3 and T3=T4  THEN 1
WHEN T11 = T12 and T12 = T1 AND T1=T2 AND T2!=T3 and T3=T4  THEN 1
WHEN T11 = T12 and T12 = T1 AND T1=T2 AND T2=T3 and T3!=T4  THEN 1

WHEN T11 != T12 and T12 != T1 AND T1=T2 AND T2=T3 and T3=T4  THEN 2
WHEN T11 != T12 and T12 = T1 AND T1!=T2 AND T2=T3 and T3=T4  THEN 2
WHEN T11 != T12 and T12 = T1 AND T1=T2 AND T2!=T3 and T3=T4  THEN 2
WHEN T11 != T12 and T12 = T1 AND T1=T2 AND T2=T3 and T3!=T4  THEN 2

WHEN T11 = T12 and T12 != T1 AND T1!=T2 AND T2=T3 and T3=T4  THEN 2
WHEN T11 = T12 and T12 != T1 AND T1=T2 AND T2!=T3 and T3=T4  THEN 2
WHEN T11 = T12 and T12 != T1 AND T1=T2 AND T2=T3 and T3!=T4  THEN 2

WHEN T11 = T12 and T12 = T1 AND T1!=T2 AND T2!=T3 and T3=T4  THEN 2
WHEN T11 = T12 and T12 = T1 AND T1!=T2 AND T2=T3 and T3!=T4  THEN 2

WHEN T11 = T12 and T12 = T1 AND T1=T2 AND T2!=T3 and T3!=T4  THEN 2

WHEN T11 != T12 and T12 != T1 AND T1!=T2 AND T2=T3 and T3=T4  THEN 3
WHEN T11 != T12 and T12 != T1 AND T1=T2 AND T2!=T3 and T3=T4  THEN 3
WHEN T11 != T12 and T12 != T1 AND T1=T2 AND T2=T3 and T3!=T4  THEN 3

WHEN T11 != T12 and T12 = T1 AND T1!=T2 AND T2!=T3 and T3=T4  THEN 3
WHEN T11 != T12 and T12 = T1 AND T1!=T2 AND T2=T3 and T3!=T4  THEN 3

WHEN T11 != T12 and T12 = T1 AND T1=T2 AND T2!=T3 and T3!=T4  THEN 3

WHEN T11 = T12 and T12 != T1 AND T1!=T2 AND T2!=T3 and T3=T4  THEN 3
WHEN T11 = T12 and T12 != T1 AND T1!=T2 AND T2=T3 and T3!=T4  THEN 3

WHEN T11 = T12 and T12 = T1 AND T1!=T2 AND T2!=T3 and T3!=T4  THEN 3

WHEN T11 != T12 and T12 = T1 AND T1!=T2 AND T2!=T3 and T3!=T4  THEN 4
WHEN T11 = T12 and T12 != T1 AND T1!=T2 AND T2!=T3 and T3!=T4  THEN 4
WHEN T11 != T12 and T12 != T1 AND T1!=T2 AND T2!=T3 and T3=T4  THEN 4

WHEN T11 != T12 and T12 != T1 AND T1!=T2 AND T2!=T3 and T3!=T4  THEN 5

ELSE 0
END AS CS

FROM(SELECT ISDN1,T11,T12,T1,T2,T3,T4
FROM 
(select ISDN1,T11,T12,T1,T2,T3,T4
from 	(SELECT ISDN AS ISDN1, OS_INFORMATION AS T11
FROM CDRVMS_ADMIN.ADC_201511) A
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T12
FROM CDRVMS_ADMIN.ADC_201512) B
ON A.ISDN1 = B.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T1
FROM CDRVMS_ADMIN.ADC_201601) C
ON B.ISDN = C.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T2
FROM CDRVMS_ADMIN.ADC_201602) D
ON C.ISDN = D.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T3
FROM CDRVMS_ADMIN.ADC_201603) E
ON D.ISDN = E.ISDN
INNER JOIN
	(SELECT ISDN, OS_INFORMATION AS T4
FROM CDRVMS_ADMIN.ADC_201604) F
ON E.ISDN = F.ISDN) Y
LEFT JOIN 
	(SELECT MID
 	FROM CDRVMS.CDRVMS_ADMIN.VMS_CHURNER_2017
	where  EXTRACT(YEAR FROM DATE_CHURN) = 2016 and  EXTRACT(MONTH FROM DATE_CHURN) < 5) X
	ON Y.ISDN1 = X.MID
	WHERE X.MID IS NULL) Z
	) P
	
GROUP BY CS

SELECT MID, DV, SUM(DURATION) AS DURATION, CELL_ID, EX_TIME
FROM( SELECT MID,
	CASE
WHEN DURATION = 0 THEN 1
else DURATION  END AS DURATION,CELL_ID,
	CASE
    WHEN cast(CALL_STA_TIME as time) >= '06:00:00' and cast(CALL_STA_TIME as time) < '07:30:00' then 'BREAKFAST'
    WHEN cast(CALL_STA_TIME as time) >= '07:30:00' and cast(CALL_STA_TIME as time) < '11:30:00' then 'MORNING_WORK'
    WHEN cast(CALL_STA_TIME as time) >= '17:30:00' and cast(CALL_STA_TIME as time) < '13:30:00' then 'LUNCH'
    WHEN cast(CALL_STA_TIME as time) >= '13:30:00' and cast(CALL_STA_TIME as time) < '17:30:00' then 'AFTERNOON'
    WHEN cast(CALL_STA_TIME as time) >= '17:30:00' and cast(CALL_STA_TIME as time) < '20:00:00' then 'DINNER'
    WHEN cast(CALL_STA_TIME as time) >= '20:00:00' and cast(CALL_STA_TIME as time) < '22:00:00' then 'RELAX'
    else  'NIGHT' 
 END EX_TIME,
 CALL_STA_TIME,
	CASE
WHEN CALL_TYPE IN ('RM','IC','OG')THEN 'VOICE'
else 'SMS' 
end AS DV
  FROM CDRVMS.CDRVMS_ADMIN.VMS_VSR_201701
) Z
GROUP BY  MID, DV, CELL_ID, EX_TIME
ORDER BY MID



  


select MID,CELL_ID,KEY_WORD,sum(DURATION) AS DURATION
from (SELECT MID, DURATION ,CELL_ID,  DV ||'_' ||  WEEK_  ||'_' ||  EX_TIME as KEY_WORD
FROM(SELECT MID,
	CASE
	WHEN CALL_TYPE IN ('RM','IC','OG')THEN 'VOICE'
	else 'SMS' 
	end AS DV,
	CASE
    WHEN cast(CALL_STA_TIME as time) >= '06:00:00' and cast(CALL_STA_TIME as time) < '07:30:00' then 'BREAKFAST'
    WHEN cast(CALL_STA_TIME as time) >= '07:30:00' and cast(CALL_STA_TIME as time) < '11:30:00' then 'MORNING_WORK'
    WHEN cast(CALL_STA_TIME as time) >= '17:30:00' and cast(CALL_STA_TIME as time) < '13:30:00' then 'LUNCH'
    WHEN cast(CALL_STA_TIME as time) >= '13:30:00' and cast(CALL_STA_TIME as time) < '17:30:00' then 'AFTERNOON'
    WHEN cast(CALL_STA_TIME as time) >= '17:30:00' and cast(CALL_STA_TIME as time) < '20:00:00' then 'DINNER'
    WHEN cast(CALL_STA_TIME as time) >= '20:00:00' and cast(CALL_STA_TIME as time) < '22:00:00' then 'RELAX'
    else  'NIGHT' 
 END EX_TIME,
 CASE 
 WHEN extract(dow from CALL_STA_TIME) = 1 OR extract(dow from CALL_STA_TIME) = 7 THEN 'WK'
 ELSE 'WD' end  as WEEK_,
	
	CASE
WHEN DURATION = 0 THEN 1
else DURATION  END AS DURATION,CELL_ID
  FROM CDRVMS.CDRVMS_ADMIN.VMS_VSR_201701
  
  union all
   SELECT ISDN AS MID,
	TRANS_TYPE AS DV,
	EX_TIME,
 DATE_OF_WEEK  as WEEK_,
	
USED_DURATION AS DURATION,CELL_ID
  FROM VMS_ICC_META 
) Z

) W

group by MID,CELL_ID,KEY_WORD

select ISDN, VUNG
from((SELECT *
  FROM CDRVMS.VUNGO.VMS_SUB_PSC
 where MONTH_CHECK = 201604) a
 inner join
 (SELECT province,
case
when province_name in ('Lai Châu', 'Điện Biên', 'Sơn La', 'Hòa Bình', 'Cao Bằng', 'Lạng Sơn', 
'Bắc Giang','Thái Nguyên', 'Bắc Cạn', 'Hà Giang', 'Tuyên Quang', 'Phú Thọ', 'Lào Cai', 'Yên Bái', 'Quảng Ninh' ) then 1

when province_name in ('Hà Nội', 'Hải Phòng', 'Bắc Ninh', 'Hải Dương', 'Hưng Yên', 'Ninh Bình', 'Thái Bình', 'Hà Nam', 'Nam Định', 'Vĩnh Phúc') then 2

when province_name in ('Thanh Hóa', 'Nghệ An', 'Hà Tĩnh', 'Quảng Bình', 'Quảng Trị', 'Thừa Thiên Huế', 'Đà Nẵng', 'Quảng Nam', 
'Quảng Ngãi', 'Bình Định', 'Phú Yên', 'Khánh Hòa', 'Ninh Thuận', 'Bình Thuận') then 3

when province_name in('Kon Tum', 'Gia Lai', 'Đắk Lắk', 'Đắc Nông', 'Lâm Đồng') then 4

when province_name in('TP. Hồ Chí Minh', 'Tây Ninh', 'Bình Phước', 'Bình Dương', 'Đồng Nai', 'Bà Rịa - Vũng Tàu') then 5
ELSE 6
END AS VUNG
  FROM CDRVMS.CDRVMS_ADMIN.VMS_MAPPING_DISTRICT
 group by province, province_name
 
) b
on a.province_code = b.province) 


SELECT ISDN,

SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='BREAKFAST' THEN  USED_DURATION ELSE 0 END ) AS WD_V_BRE,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='AFTERNOON' THEN  USED_DURATION ELSE 0 END ) AS WD_V_AFT,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='MORNING_WORK' THEN  USED_DURATION ELSE 0 END ) AS WD_V_MOR,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='LUNCH' THEN  USED_DURATION ELSE 0 END ) AS WD_V_LUN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='DINNER' THEN  USED_DURATION ELSE 0 END ) AS WD_V_DIN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='RELAX' THEN  USED_DURATION ELSE 0 END ) AS WD_V_REL,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='NIGHT ' THEN  USED_DURATION ELSE 0 END ) AS WD_V_NIG,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='BREAKFAST' THEN  USED_DURATION ELSE 0 END ) AS WK_V_BRE,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='AFTERNOON' THEN  USED_DURATION ELSE 0 END ) AS WK_V_AFT,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='MORNING_WORK' THEN  USED_DURATION ELSE 0 END ) AS WK_V_MOR,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='LUNCH' THEN  USED_DURATION ELSE 0 END ) AS WK_V_LUN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='DINNER' THEN  USED_DURATION ELSE 0 END ) AS WK_V_DIN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='RELAX' THEN  USED_DURATION ELSE 0 END ) AS WK_V_REL,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='NIGHT ' THEN  USED_DURATION ELSE 0 END ) AS WK_V_NIG,

SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='BREAKFAST' THEN  USED_DURATION ELSE 0 END ) AS WD_S_BRE,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='AFTERNOON' THEN  USED_DURATION ELSE 0 END ) AS WD_S_AFT,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='MORNING_WORK' THEN  USED_DURATION ELSE 0 END ) AS WD_S_MOR,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='LUNCH' THEN  USED_DURATION ELSE 0 END ) AS WD_S_LUN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='DINNER' THEN  USED_DURATION ELSE 0 END ) AS WD_S_DIN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='RELAX' THEN  USED_DURATION ELSE 0 END ) AS WD_S_REL,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='NIGHT ' THEN  USED_DURATION ELSE 0 END ) AS WD_S_NIG,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='BREAKFAST' THEN  USED_DURATION ELSE 0 END ) AS WK_S_BRE,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='AFTERNOON' THEN  USED_DURATION ELSE 0 END ) AS WK_S_AFT,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='MORNING_WORK' THEN  USED_DURATION ELSE 0 END ) AS WK_S_MOR,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='LUNCH' THEN  USED_DURATION ELSE 0 END ) AS WK_S_LUN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='DINNER' THEN  USED_DURATION ELSE 0 END ) AS WK_S_DIN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='RELAX' THEN  USED_DURATION ELSE 0 END ) AS WK_S_REL,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='NIGHT ' THEN  USED_DURATION ELSE 0 END ) AS WK_S_NIG,

SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='BREAKFAST' THEN  USED_DURATION ELSE 0 END ) AS WD_D_BRE,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='AFTERNOON' THEN  USED_DURATION ELSE 0 END ) AS WD_D_AFT,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='MORNING_WORK' THEN  USED_DURATION ELSE 0 END ) AS WD_D_MOR,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='LUNCH' THEN  USED_DURATION ELSE 0 END ) AS WD_D_LUN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='DINNER' THEN  USED_DURATION ELSE 0 END ) AS WD_D_DIN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='RELAX' THEN  USED_DURATION ELSE 0 END ) AS WD_D_REL,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='NIGHT ' THEN  USED_DURATION ELSE 0 END ) AS WD_D_NIG,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='BREAKFAST' THEN  USED_DURATION ELSE 0 END ) AS WK_D_BRE,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='AFTERNOON' THEN  USED_DURATION ELSE 0 END ) AS WK_D_AFT,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='MORNING_WORK' THEN  USED_DURATION ELSE 0 END ) AS WK_D_MOR,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='LUNCH' THEN  USED_DURATION ELSE 0 END ) AS WK_D_LUN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='DINNER' THEN  USED_DURATION ELSE 0 END ) AS WK_D_DIN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='RELAX' THEN  USED_DURATION ELSE 0 END ) AS WK_D_REL,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='NIGHT ' THEN  USED_DURATION ELSE 0 END ) AS WK_D_NIG,


SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='BREAKFAST' THEN  1 ELSE 0 END ) AS COUNT_WD_V_BRE,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='AFTERNOON' THEN  1 ELSE 0 END ) AS COUNT_WD_V_AFT,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='MORNING_WORK' THEN  1 ELSE 0 END ) AS COUNT_WD_V_MOR,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='LUNCH' THEN  1 ELSE 0 END ) AS COUNT_WD_V_LUN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='DINNER' THEN  1 ELSE 0 END ) AS COUNT_WD_V_DIN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='RELAX' THEN  1 ELSE 0 END ) AS COUNT_WD_V_REL,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WD' AND EX_TIME='NIGHT ' THEN  1 ELSE 0 END ) AS COUNT_WD_V_NIG,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='BREAKFAST' THEN  1 ELSE 0 END ) AS COUNT_WK_V_BRE,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='AFTERNOON' THEN  1 ELSE 0 END ) AS COUNT_WK_V_AFT,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='MORNING_WORK' THEN  1 ELSE 0 END ) AS COUNT_WK_V_MOR,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='LUNCH' THEN  1 ELSE 0 END ) AS COUNT_WK_V_LUN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='DINNER' THEN  1 ELSE 0 END ) AS COUNT_WK_V_DIN,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='RELAX' THEN  1 ELSE 0 END ) AS COUNT_WK_V_REL,
SUM(CASE WHEN TRANS_TYPE='VOICE' AND DATE_OF_WEEK='WK' AND EX_TIME='NIGHT ' THEN  1 ELSE 0 END ) AS COUNT_WK_V_NIG,

SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='BREAKFAST' THEN  1 ELSE 0 END ) AS COUNT_WD_S_BRE,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='AFTERNOON' THEN  1 ELSE 0 END ) AS COUNT_WD_S_AFT,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='MORNING_WORK' THEN  1 ELSE 0 END ) AS COUNT_WD_S_MOR,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='LUNCH' THEN  1 ELSE 0 END ) AS COUNT_WD_S_LUN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='DINNER' THEN  1 ELSE 0 END ) AS COUNT_WD_S_DIN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='RELAX' THEN  1 ELSE 0 END ) AS COUNT_WD_S_REL,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WD' AND EX_TIME='NIGHT ' THEN  1 ELSE 0 END ) AS COUNT_WD_S_NIG,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='BREAKFAST' THEN  1 ELSE 0 END ) AS COUNT_WK_S_BRE,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='AFTERNOON' THEN  1 ELSE 0 END ) AS COUNT_WK_S_AFT,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='MORNING_WORK' THEN  1 ELSE 0 END ) AS COUNT_WK_S_MOR,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='LUNCH' THEN  1 ELSE 0 END ) AS COUNT_WK_S_LUN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='DINNER' THEN  1 ELSE 0 END ) AS COUNT_WK_S_DIN,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='RELAX' THEN  1 ELSE 0 END ) AS COUNT_WK_S_REL,
SUM(CASE WHEN TRANS_TYPE='SMS' AND DATE_OF_WEEK='WK' AND EX_TIME='NIGHT ' THEN  1 ELSE 0 END ) AS COUNT_WK_S_NIG,

SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='BREAKFAST' THEN  1 ELSE 0 END ) AS COUNT_WD_D_BRE,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='AFTERNOON' THEN  1 ELSE 0 END ) AS COUNT_WD_D_AFT,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='MORNING_WORK' THEN  1 ELSE 0 END ) AS COUNT_WD_D_MOR,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='LUNCH' THEN  1 ELSE 0 END ) AS COUNT_WD_D_LUN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='DINNER' THEN  1 ELSE 0 END ) AS COUNT_WD_D_DIN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='RELAX' THEN  1 ELSE 0 END ) AS COUNT_WD_D_REL,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WD' AND EX_TIME='NIGHT ' THEN  1 ELSE 0 END ) AS COUNT_WD_D_NIG,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='BREAKFAST' THEN  1 ELSE 0 END ) AS COUNT_WK_D_BRE,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='AFTERNOON' THEN  1 ELSE 0 END ) AS COUNT_WK_D_AFT,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='MORNING_WORK' THEN  1 ELSE 0 END ) AS COUNT_WK_D_MOR,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='LUNCH' THEN  1 ELSE 0 END ) AS COUNT_WK_D_LUN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='DINNER' THEN  1 ELSE 0 END ) AS COUNT_WK_D_DIN,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='RELAX' THEN  1 ELSE 0 END ) AS COUNT_WK_D_REL,
SUM(CASE WHEN TRANS_TYPE='DATA' AND DATE_OF_WEEK='WK' AND EX_TIME='NIGHT ' THEN  1 ELSE 0 END ) AS COUNT_WK_D_NIG


FROM VMS_ICC_META
WHERE EXTRACT(MONTH FROM CALL_STA_TIME) = 1
GROUP BY ISDN

DATA
FASTCRE
M2U
OTH
ROA
SMS
VAS
VOICE
NOKIA ISA 1.0

select DISTINCT calling_isdn,
last_value(calling_imei) over (partition by calling_isdn order by to_char(call_sta_time,'MM-YYYY')
rows between current row and unbounded following ) as calling_imei
from CDRVMS_ADMIN.VMS_CDRMSC_201706 WHERE CALLING_ISDN='938880387'

select mid,SCRATCH_VALUE,call_sta_time, ROW_NUMBER() OVER (PARTITION by MID ORDER BY call_sta_timE) RN 
FROM CDRVMS.CDRVMS_ADMIN.VMS_TOPUP_2017



select * ---cast(isdn1 as varchar(20)) as isdn1,ARPU_KHUVUC ,TTD_TKC,SDT_LIENHE,Duration_Voice,LOS,count_cell,pre_post,clv,cong_dong
from 
(select isdn1, ARPU_PROVINCE
from ( SELECT distinct isdn as isdn1, province_code
  FROM CDRVMS.VUNGO.VMS_SUB_PSC
  where month_check in (201703,201704,201705)) p
 left join
 (select province_code, sum(revenue_total)/(3*COUNT(ISDN )) ::BIGINT AS ARPU_PROVINCE          
from (SELECT mid, sum(revenue_total) as revenue_total
  FROM CDRVMS.CDRVMS_ADMIN.VMS_DAILY_REVENUE_2017
 where EXTRACT(MONTH FROM accdate) in(3,4,5) 
  group by mid) z
inner join
(SELECT distinct isdn, province_code
  FROM CDRVMS.VUNGO.VMS_SUB_PSC
 where MONTH_CHECK in (201703,201704,201705))x 
 on z.mid = x.isdn
 group by province_code) Q

 on p.province_code = Q.province_code
) b

 inner join
(
select MID,sum(REVENUE_TOTAL)/3 as TD_TKC 
from
CDRVMS_ADMIN.VMS_DAILY_REVENUE_2017
where extract(month from ACCDATE) in (3,4,5)
group by mid) d 
 on b.isdn1 = d.mid
 inner join
( SELECT MID, (count( distinct CALLED_ISDN))/3 as SDT_LIENHE, (SUM(DURATION ))/3 ::bigint as Duration_Voice
  FROM (select * from CDRVMS.CDRVMS_ADMIN.VMS_VSR_201703
  union all
  select * from  CDRVMS.CDRVMS_ADMIN.VMS_VSR_201704
  union all
  select * from  CDRVMS.CDRVMS_ADMIN.VMS_VSR_201705) a
WHERE PROVIDER not in ('OTHER') and call_type in ('IC','OG','SMO','SMT')
GROUP BY MID) e
on d.mid = e.MID
INNER JOIN
(SELECT HLR_ISDN, LOS :: BIGINT AS LOS
  FROM CDRVMS.CDRVMS_ADMIN.VMS_SUB_PREPAID_2017
  WHERE MONTH ='2017-05-01 00:00:00' AND LOS is NOT NULL) j
on e.MID = j.HLR_ISDN
INNER JOIN
(select ISDN, VUNG
from((SELECT distinct ISDN, PROVINCE_CODE
  FROM CDRVMS.VUNGO.VMS_SUB_PSC
 where MONTH_CHECK in (201604,201605,201603)) s
 inner join
 (SELECT province,
case
when province_name in ('Lai Châu', 'Điện Biên', 'Sơn La', 'Hòa Bình', 'Cao Bằng', 'Lạng Sơn', 
'Bắc Giang','Thái Nguyên', 'Bắc Cạn', 'Hà Giang', 'Tuyên Quang', 'Phú Thọ', 'Lào Cai', 'Yên Bái', 'Quảng Ninh' ) then 1

when province_name in ('Hà Nội', 'Hải Phòng', 'Bắc Ninh', 'Hải Dương', 'Hưng Yên', 'Ninh Bình', 'Thái Bình', 'Hà Nam', 'Nam Định', 'Vĩnh Phúc') then 2

when province_name in ('Thanh Hóa', 'Nghệ An', 'Hà Tĩnh', 'Quảng Bình', 'Quảng Trị', 'Thừa Thiên Huế', 'Đà Nẵng', 'Quảng Nam', 
'Quảng Ngãi', 'Bình Định', 'Phú Yên', 'Khánh Hòa', 'Ninh Thuận', 'Bình Thuận') then 3

when province_name in('Kon Tum', 'Gia Lai', 'Đắk Lắk', 'Đắc Nông', 'Lâm Đồng') then 4

when province_name in('TP. Hồ Chí Minh', 'Tây Ninh', 'Bình Phước', 'Bình Dương', 'Đồng Nai', 'Bà Rịa - Vũng Tàu') then 5
ELSE 6
END AS VUNG
  FROM CDRVMS.CDRVMS_ADMIN.VMS_MAPPING_DISTRICT
 group by province, province_name
 
) d
on s.province_code = d.province) p 
) w
on j.HLR_ISDN = w.isdn
inner join
(select mid , case when avg ( CREDIT_REMAINING - SCRATCH_VALUE) > 0 then avg ( CREDIT_REMAINING - SCRATCH_VALUE) else 0 end as SDTK
from
vms_topup_new_2017
group by mid) r
on w.ISDN = r.mid
left join
(select isdn , clv
from VMS_CLV_RESULT_201703_N1) k
on r.mid = k.isdn
left join
(SELECT isdn,cong_dong
FROM CDRVMS.THANHVU.CD_RESULT_201704) g
on k.isdn = g.isdn
